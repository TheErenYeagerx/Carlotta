name: Update dependencies

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    paths:
      - "requirements.txt"
      - "**.yml"

jobs:
  deps:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: pip install --upgrade pip packaging

      - name: Update requirements.txt
        id: update
        run: |
          python <<'EOF'
          import json, subprocess
          from pathlib import Path
          from packaging.version import parse as vparse

          reqs = Path("requirements.txt")

          result = subprocess.run(
              ["pip", "list", "--outdated", "--format", "json"],
              capture_output=True, text=True, check=True
          )
          outdated = {p["name"].lower(): (p["version"], p["latest_version"]) for p in json.loads(result.stdout)}

          changed = 0
          major_updates = []
          lines = reqs.read_text().splitlines()
          new_lines = []

          for line in lines:
              if not line.strip() or line.startswith("#"):
                  new_lines.append(line)
                  continue

              pkg = line.split("==")[0].strip().lower()
              if pkg in outdated:
                  current, latest = outdated[pkg]
                  old_v, new_v = vparse(current), vparse(latest)
                  new_line = f"{pkg}=={latest}"

                  if new_v.major > old_v.major:
                      major_updates.append(f"{pkg}: {current} → {latest}")
                  elif new_line != line:
                      new_lines.append(new_line)
                      changed += 1
                      continue

              new_lines.append(line)

          if changed:
              reqs.write_text("\n".join(new_lines) + "\n")

          Path("/tmp/title.txt").write_text(
              "Update dependencies" if not changed else f"Update dependencies [{changed} package{'s' if changed > 1 else ''}]"
          )

          Path("/tmp/major.txt").write_text("\n".join(major_updates))
          print(f"::set-output name=changed::{changed}")
          print(f"::set-output name=has_major::{bool(major_updates)}")
          EOF

          echo "title=$(cat /tmp/title.txt)" >> $GITHUB_OUTPUT
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "major=$(cat /tmp/major.txt)" >> $GITHUB_OUTPUT
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          git diff -U0 requirements.txt | grep '^[+-][^+-]' >> $GITHUB_OUTPUT || true
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Configure Git for push
        if: steps.update.outputs.changed != '0'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}

      - name: Commit and Push changes
        if: steps.update.outputs.changed != '0' && steps.update.outputs.has_major == 'False'
        run: |
          git add requirements.txt
          git commit -m "${{ steps.update.outputs.title }}"
          git push origin main

      - name: Create Pull Request for major updates
        if: steps.update.outputs.has_major == 'True'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: ${{ steps.update.outputs.title }}
          title: ⚠️ Major dependency updates
          body: |
            Major updates detected that need manual review:

            ```
            ${{ steps.update.outputs.major }}
            ```

            Diff:
            ```diff
            ${{ steps.update.outputs.diff }}
            ```
          branch: deps/update-${{ steps.update.outputs.date }}
          delete-branch: true
          author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"